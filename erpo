--[[
          ...                               .---:                                                                                             
         .%%%-                             *%%%#*                                                 :===                                        
         .%%%-    .::.  ... ...      ... .=%%%:.. ...     ..     .:.        .:..       .:.  ...  .=%%#..     ..:.      ...  .:                
         .%%%-  =#%%%%%*%%% -%%#    -%%#.*%%%%%%*.%%%.   *%%+ .*%%%%%+   -*%%%%%#=  :*%%%%%*%%%-.%%%%%%%: .+#%%%%%*-  :%%%:#%%:               
         .%%%- *%%#-::=#%%%  =%%*  .#%%: .=%%#....%%%.   *%%+ =%%#      *%%*-::=*=.:%%%=::-*%%%- .=%%#.. :%%%=::-#%%+ :%%%#+--                
         .%%%-.%%%:    :%%%   *%%= *%%-   -%%#   .%%%.   *%%+  +#%%#*- .%%%.       +%%+     #%%-  -%%#   *%%=    .%%%.:%%%:                   
    :=: .=%%%. #%%+   .*%%%    #%%*%%=    -%%#   .%%%-  .#%%+      *%%+ #%%=   :-. =%%#:   -%%%-  -%%#   =%%#.   +%%# :%%%                    
   -%%%%%%%%-  .*%%%##%%%%%    .#%%%+     -%%#    +%%%##%#%%+ =%%#*#%%- .*%%%#%%%*. =%%%##%%%%%-  .#%%%#: =#%%%#%%%+. :%%%                    
     :====:      .-===:.---     =%%*      .---     .-==-.:--:  .-===-      -===-.     :===- ---.    -==-    :-===:    .---                    
                               :%%#.                                                                                                          
                               ===.                                                                                                           
--]]

-- Jayfuscator V1.2.1 --

return(function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,ba,bb,bc,bd,be,bf,bg,bh,bh)local bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm,cn,co,cp,cq,cr,cs,ct,cu,cv=125,57,60,61,90,97,79,66,85,87,39,46,37,94,13,21,46,16,92,56,78,60,87,81,98,92,20,16,32,22,51,45,15,46,84,86,85,97,32,64,35,44,68,66,69,69,40,15,80,41 while bh~=77 do if bi<=757 then if bi<=415 then if bi>=223 then if bi>=348 then if bi>=395 then if bi>397 then bi=450 ce=setmetatable else bi=415 co=(getfenv or function()return _ENV end)end else bi=395 cl=math.ldexp end else if bi<=223 then bm=string.rep bi=258 else if bi<300 then bi=306 bp=table.concat else bi=348 cf=table.insert end end end else if bi<=94 then if bi<91 then bi=94 bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm,cn,co,cp,cq,cr,cs,ct,cu,cv=nil else do bk=string.byte end bi=135 end else if bi>=181 then if bi>185 then cd=string.gsub bi=223 else bi=205 cc=string.sub end else bn=string.char bi=181 end end end else if bi>=618 then if bi<=662 then if bi<=618 then bl=(unpack or table.unpack)bi=647 else if bi>652 then cj={}bi=703 else bi=662 do bv=tonumber end end end else if bi<=703 then bi=719 do for bm=0,255 do cj[bm]=bn(bm);end end else if bi<751 then bi=757 bt=cdfunction(bm,bn,bn)return cj[bv(bm,16)]end)else bi=787 cb={{0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,},{1,0,3,2,5,4,7,6,9,8,11,10,13,12,15,14,},{2,3,0,1,6,7,4,5,10,11,8,9,14,15,v,13,},{3,2,1,0,7,6,5,4,11,10,9,8,15,14,13,12,},{4,5,6,7,0,1,2,3,12,13,14,15,8,9,10,11,},{5,4,7,6,bg,0,3,2,13,12,15,14,9,8,11,10,},{6,7,be,5,2,3,0,1,14,15,12,13,10,11,8,9,},{7,6,5,4,3,2,1,0,15,14,13,12,11,10,9,8,},{8,k,10,11,12,13,14,f,0,1,2,t,4,5,6,h,},{9,8,11,10,13,12,15,14,1,0,3,2,5,4,7,6,},{10,11,8,9,14,15,12,13,2,3,0,1,6,7,4,5,},{11,10,9,8,15,14,13,12,3,2,1,0,7,6,5,4,},{12,13,14,15,8,9,10,11,4,5,6,7,0,1,2,3,},{13,12,15,14,9,8,11,10,5,4,n,6,1,0,3,2,},{14,15,12,13,bb,11,8,9,6,7,4,w,2,3,0,1,},{15,14,13,12,11,10,9,o,7,l,5,4,3,2,1,u,},nil}end end end else if bi>=509 then if bi>=534 then if bi<569 then bi=573 cq=math.abs else bi=618 cr=math.floor end else cm=(function(f,h,h)do if not(bo(f)~='number')then return true else do return false end end end end)bi=534 end else if bi<479 then bi=484 bj=select else bi=509 bo=type end end end end else if bi>=1080 then if bi>=1240 then if bi<=1282 then if bi>=1256 then if bi>1265 then bx={}bi=1313 else bi=1282 by={}end else cp=function(f,h)local h,k,l,n,o,t,u,v=87,65,89,33,15,69,71,76,43,56,71,62,16,81,11,12,66,95,51,81,74,70,31,43 while h~=38 do if k<=316 then if k<=192 then if k<=113 then if k>73 then do l={}end k=157 else l,n,o,t,u,v=nil k=113 end else if k>166 then u={}k=218 else k=192 n={}end end else if k>=280 then if k>283 then v={}k=346 else k=316 do o=cn()end end else if k>224 then k=280 for w=(#cs+1),(#cs+t)do local bb,be,bg,bm,bn=77,49,61,64,68,95,77,81,10,88,21,54,92,49,81,70,49,24,85,33,88,66,88 while bb~=42 do if be>=330 then if be<=413 then if be<=347 then if be>339 then bn[183]=cv(bg,12,20);be=364 else bn[27]=cv(bg,3,11);be=347 end else if be>367 then do bn[31]=cv(bm,12,33);end be=458 else be=413 do bn[178]=cv(bg,21,29);end end end else if be<=498 then if be>464 then bn[29]=-bn[178]be=534 else be=498 bn[194]=-bn[27]end else if be<553 then be=561 cs[w]=bn;else break end end end else if be>=186 then if be<=218 then if be<216 then bm=cn()be=218 else bn[130]=cu();be=239 end else if be>241 then be=330 bn[128]=cv(bm,1,11);else be=287 do bn[34]=cv(bg,1,bc);end end end else if be<=84 then if be<77 then bg,bm,bn=nil be=84 else be=122 bn={}end else if be>124 then bg=cn()be=186 else be=142 bn[180]=cu();end end end end end end else k=239 t=cn()end end end else if k>=485 then if k<=531 then if k<526 then k=531 u[116]=cu();else k=580 for t=1,cn()do local w,bb,bc,be,bg,bm=89,77,90,81,28,10,94,32,67,52,37,11,47,17,34,80,85,94,21,60,12,49,37,67,57,34,16 while w~=40 do if bb<=308 then if bb>=199 then if bb<=240 then if bb<232 then if 1==cu()then for bn=1,cu()do bm[7][bn]={cu()==0,cn()}end end bb=240 else be=cn()bb=258 end else if bb<=258 then bc=cn()bb=275 else if bb>278 then bb=351 bm[34]=bg else bg=cv(be,1,2)bb=308 end end end else if bb>=146 then if bb>154 then bb=199 bm[7]={};else bb=177 bm[180]=cu();end else if bb<105 then bb=111 bc,be,bg,bm=nil else bm={{},nil,nil}bb=146 end end end else if bb>=507 then if bb>=555 then if bb<=555 then bm[29]=-bm[178]bb=577 else if bb<609 then bb=618 do l[t]=bm;end else w=40;end end else if bb<521 then bb=530 bm[i]=cv(be,12,20);else bb=555 bm[194]=-bm[27]end end else if bb<=397 then if bb>355 then bm[27]=cv(be,3,11);bb=431 else bb=397 bm[q]=cv(bc,1,11);end else if bb<462 then bm[31]=cv(bc,12,s);bb=468 else bb=507 bm[178]=cv(be,21,29);end end end end end end end else if k>=602 then if k>608 then h=38;else k=630 do return u;end end else k=602 u[25]=l;end end else if k<=374 then if k<365 then for h=1,o do local i,l,o,q=66,45,60,58,86,70,84,51,36,14,56,35,45 while i~=27 do if l>=124 then if l>=142 then if l<161 then l=170 v[h]=q;else break end else if(z==o)then q=(0~=cu());elseif(not(o~=2))then q=bq();elseif(not(o~=3))then q=br();elseif(not(o~=1))then q=f[br()];end;l=142 end else if l>=72 then if l>77 then l=124 q=nil else o=cu()l=88 end else l=72 o,q=nil end end end end k=374 else k=406 u[174]=v end else if k<429 then for f=1,cn()do n[f-1]=cp();end k=436 else do u[125]=n;end k=485 end end end end end end bi=1256 end else if bi>=1362 then if bi>1368 then bh=77;else bi=1397 return bu(cp(co()),{},co())();end else bu=function(f,h,i,k,k)local k,l,n,o,q k=f[116]o=f[25]l=f[174]q=by n=f[125]return function(...)local f,q,s,t,u,v,w,z,bb q=1 w=-1 t=-1 s={}u={...}f=(bj('#',...)-1)do bb={}end do v={}end for t=0,f do do if(not(t<k))then s[(t-k)]=u[(t+1)];else v[t]=u[(t+1)];end;end end;do z=(f-k+1)end do while true do local t,z,bc,be,bg,bh,bm,bn,bo,bp bh=o[q]be=bh[128]do bp=bh[180]end bo=bh[27]bn=bh[183]do bm=bh[178]end bc=bh[130]bg=bh[194]z=bh[31]t=bh[29]if not(be>48)then if not(be>23)then if not(be>11)then if not(be<6)then if not(be<9)then if not(be<10)then if not(be~=10)then v[bo]={};else v[bo]=v[bh[31]][v[bm]];end else local bp,bv,bx bx=bo bv={v[bx](v[bx+1])}bp=0 for cc=bx,bm do bp=(bp+1);v[cc]=bv[bp];end end else if not(bh[128]<7)then do if 7==be then v[bo][v[z]]=v[bm];else v[bh[bo]]=v end end else v={};for bp=0,f do if(bp<k)then v[bp]=u[(bp+1)];else do break end end;end;end end else if not(be<3)then if not(be>3)then v[t]=(function()do v[bo]=bu(n[bn],nil,i);end end)else if 4==be then v[bo]=by[bn]else v[bo]=-v[z];end end else if not(be>0)then local f,k,u f=bo do u=v[f]end k=v[(f+2)]if((k>0))then if((u>v[f+1]))then q=z;else do v[(f+3)]=u;end end elseif((u<v[f+1]))then q=z;else v[(f+j)]=u;end else if not(be~=1)then local f,j j=z do f=v[j]end do for k=(j+1),bm do f=(f..v[k]);end;end v[bo]=f;else v[bo]=i[l[z]];end end end end else if not(be<18)then if not(bh[128]>20)then if not(be<19)then if(be>19)then local f,j do j=bo end f=v[z]do v[(j+1)]=f;end do v[j]=f[v[bm]];end else w=bh[bo];end else o[q]={[27]=2,[130]=x,[31]=131,[128]=be- -19,[178]=4};q=(q-1);end else if not(be<22)then if 22==be then local f f=bo do return bl(v,f,(f+bh[31]))end;else do o[q]=cs[bc];end q=z;end else v[bo]=bu(n[z],nil,i);end end else if not(be>14)then if not(be<13)then if(be>13)then local f f=bo do v[f]=v[f](bl(v,f+1,w));end else end else do i[l[z]]=v[bo];end end else if not(be<16)then if(be>16)then h[bh[31]]=v[bo];else v[bo]=#v[z];end else q=((l[bh[27]]<v[bh[e]])and z or q)end end end end else if not(bh[128]>35)then do if not(be<m)then if not(be>32)then if not(be>30)then i=v[bh[bo]]else do if(be>31)then local e e=v[bg][bh[130]]v[bg][bc]=(e..v[bm]);else v[bh[27]][l[z]]=l[bm];end end end else do if not(be<34)then if not(be~=34)then do v[bo]=nil;end else v[bo]=v[bh[31]];end else o[q]={[31]=0,[178]=b,[130]=0,[128]=bh[128]- -2,[27]=3};q=(q-1);end end end else if not(bh[128]>26)then if not(be>24)then v[bo]=(v[z]^v[bm]);else if(be>25)then do v[bo]=(v[z]+l[bm]);end else local b,e,f e=n[bh[31]]b=nil f={}b=ce({},{__index=function(j,j)local j=f[j];return j[1][j[2]];end,__newindex=function(j,j,k)local j=f[j]j[1][j[2]]=k;end;});for j=1,bm do local k k=bh[7][j]if k[1]then do f[(j-1)]={v,k[2],nil,nil};end else f[(j-1)]={h,k[2],nil,nil};end;bb[(#bb+1)]=f;end;v[bh[27]]=bu(e,b,i);end end else if not(be<28)then if not(be~=28)then q=z;else v[bo]=(not v[z]);end else do if bo then bo=false;do bm=z;end do q=(q-1);end else do q=(q+z+bm);end end end end end end end else if not(be>41)then if not(be<39)then if not(be>39)then by=v else if(be>40)then v[bo]=(v[z]*v[bm]);else do v[bo]=(v[z]*l[bm]);end end end else do if not(be<37)then do if(be>37)then local b b=bo do v[b](bl(v,(b+1),z))end else if(l[bm]~=v[bh[27]])then q=z;end;end end else v[bo]=i[l[z]][l[bh[178]]];end end end else if not(bh[128]<45)then if not(be>46)then do if(be<46)then local b b=bo do v[b](v[(b+1)])end else local b,e,f,j j=bo do e,f=ck(v[j](bl(v,(j+1),bh[31])))end w=(f+j-1)b=0 for f=j,w do b=(b+1);v[f]=e[b];end;end end else if not(bh[128]~=47)then local b b=bo v[b]=v[b]();else local b,e,f f=bo e={v[f](bl(v,f+1,z))}do b=0 end for j=f,bh[178]do do b=(b+1);end v[j]=e[b];end end end else if not(be>c)then l=by[bo](l)else if(be>43)then else do while(l[bh[27]]<v[bm])do q=z;break end end end end end end end end else if not(bh[128]<74)then if not(bh[128]>85)then if not(be<80)then if not(be>82)then if not(be<81)then do if(be>81)then if((v[bo]>v[bh[178]]))then q=z;end;else local b do b=bh[27]end do v[b]=v[b](bl(v,b+1,z));end end end else o[q]=cs[bc];do q=z;end end else if not(be>83)then local b,c c,b=ck(...)do for b=1,bo do do v[(b-1)]=c[b]end end end else if(be>84)then v[bo]=v[z][l[bm]];else if not v[bm]then v[bo]=v[bm];q=z;end;end end end else if not(be>76)then if not(be>74)then do by[bo]=by[bn]end else if(be>75)then local b,c c=bo b={}for e=1,#bb do local f f=bb[e]for e=0,#f do local j,k,m j=f[e]k=j[1]m=j[2]if(k==v and m>=c)then b[m]=k[m];j[y]=b;end;end;end;elseif not v[bo]then q=z;end end else if not(bh[128]<78)then if(be>78)then v[bo][l[z]]=v[bm];else do return v[bg][bc]end end else local b,c c=bo do b=bh[31]end for e=c,b do v[e]=s[(e-c)];end;end end end else if not(bh[128]<92)then do if not(be>94)then if not(be>92)then v[bo]=(not(z==0));q=(q+1);else if(bh[128]>93)then v[bo]=(v[z]%l[bm]);else local b,c,e do b=bo end c=v[(b+2)]e=(v[b]+c)v[b]=e;if((c>0))then do while((e<=v[b+1]))do q=z;v[b+3]=e;break end end elseif(not(e<v[b+1]))then do q=z;end v[(b+ba)]=e;end end end else if not(be>96)then if not(be~=95)then local b,c,e,f e=bo c={v[e]()}f=bm do b=0 end do for j=e,f do b=(b+1);do v[j]=c[b];end end end else v[t]();end else if(be<98)then do by[bo]()end else if(not(v[bh[27]]<v[bm]))then q=z;end;end end end end else if not(be>88)then if not(be<87)then do if(be>87)then if(v[bm]==v[bo])then do q=z;end end;else if((v[bo]<v[bm]))then do q=z;end end;end end else local b b=bo do return v[b](bl(v,(b+1),z))end;end else do if not(be<90)then if 90==bh[128]then local b,c,e,f,j j=bo c=bm e=(j+2)b={v[j](v[j+1],v[e])}for k=1,c do v[(e+k)]=b[k]end f=v[(j+3)]do if f then do v[e]=f end else q=z;end;end else local b b={}if(#bb>0)then for c=1,#bb do local e e=bb[c]for c=0,#e do local f,j,k do k=e[c]end f=k[1]do j=k[2]end while f==v and j>=0 do b[j]=f[j]k[1]=b break end end end end do return v[(bo+2)],v[(bo+1)],bh[bo];end end else v[bo]=(v[z]/l[bh[178]]);end end end end end else if not(be>60)then if not(bh[128]>54)then if not(bh[128]>51)then if not(be>a)then v[bo]=h[z];else if(bh[128]<51)then if v[bo]then q=z;end;else do v[bh[27]]=(v[z]/v[bm]);end end end else if not(be>52)then do v[bo]();end else if(be>53)then if(not(v[bo]==v[bm]))then q=z;end;else local a,b b=bo a={}while#bb>0 do for c=1,#bb do local c=bb[c]for e=0,#c do local c=c[e]local e=c[1]local f=c[2]if e==v and f>=0 then a[f]=e[f]c[1]=a end end end break end do return bl(v,b,w);end end end end else if not(be<58)then if not(bh[128]<59)then if(be>59)then do return v[bh[27]]();end;else end else do v[bo]=v[z]end end else if not(be>55)then o[q]={[27]=31,[130]=0,[128]=be-20,[31]=bd,[178]=17};q=(q-1);else if(be<57)then by[bo]=v[bn]else v[t]=(function()v[bo]=bu(n[bn],nil,i);end)end end end end else do if not(be<67)then if not(be<70)then do if not(be<72)then if(be<73)then local a,b,c b=bo a=v[b]c=z do for e=1,c do a[e]=v[(b+e)]end;end else for a=bo,z do do v[a]=nil;end end;end else if not(be~=70)then v[bo]=(v[z]+v[bm]);else v[bh[27]]=by[bn]end end end else do if not(be>67)then v[bh[27]]=(v[z]%v[bm]);else do if(be>68)then do do do return v[bo]end end end else local a a=bo do v[a]=v[a](v[a+1]);end end end end end end else if not(be>63)then if not(be>61)then o[q]={[31]=12,[128]=be-59,[27]=1,[178]=0,[130]=0};do q=(q-1);end else if(be<63)then local a,b,c,e a=bh[27]c=((bm-1)*50)e=v[a]b=z for f=1,b do do e[(c+f)]=v[(a+f)]end end;else local a,b b=bo do a=v[z]end do v[(b+1)]=a;end v[b]=a[l[bm]];end end else if not(be>64)then v[bo]=(v[z]-v[bh[178]]);else do if 65==bh[128]then by[bo]={}else do v[bo]=l[z]end end end end end end end end end end q=(q+1);end;end end;end bi=1362 end end else if bi<=1129 then if bi>1089 then bq=function()local a,b,c,e,f,h,i,j=95,68,99,24,52,33,83,97,86,34,38,51,29,37,85,76,53 while a~=48 do if b<=212 then if b<=111 then if b>75 then c=cn()b=146 else c,e,f,h,i,j=nil b=111 end else if b>=180 then if b>186 then i=((-d)^bw(31,e,1))b=258 else if((c==0 and e==g))then return 0 end b=212 end else b=180 e=cn()end end else if b<=326 then if b<=258 then b=283 j=bw(20,e,11)else if b>286 then h=1 b=373 else f=(bw(0,e,20)*4294967296+c)b=326 end end else if b>=403 then if b>410 then a=48;else b=447 do return(i*(2^(j-1023))*(f/cg+h))end end else if p==j then if not(f==0)then j=1 h=0 else return(i*0)end elseif not(j==2047)then else if 0==f then do return(i*(0/0))end else return(i*(1/0))end end b=403 end end end end end bi=1157 else bz=function()local a,b b,a=bk(bt,bs,(bs+2))bs=(bs+2);return((a*256)+b);end bi=1129 end else if bi<=1157 then br=function(a,a)local a,b,c,d=84,42,98,24,79,71,27,62,59,33,45,86,22 while a~=40 do if b<=107 then if b>=88 then if b<98 then c=cn()b=107 else do d=bt:sub(bs,(bs+c-1))end b=137 end else c,d=nil b=88 end else if b<=137 then do bs=(bs+c);end b=184 else if b<228 then b=233 return d;else a=40;end end end end end bi=1174 else if bi<1196 then ck=function(...)return{...},bj(r,...)end bi=1205 else cs={}bi=1240 end end end end else if bi<=878 then if bi<=809 then if bi>796 then bi=827 cg=(2^52)else bi=809 ca=''end else if bi>=861 then if bi>863 then bi=919 do for a=1,31 do ci[a]=ch ch=(ch*2)end end else bi=878 ch=2 end else ci={[0]=1}bi=861 end end else if bi<=966 then if bi<=919 then bi=945 bw=function(a,b,c,d,d)local d,e,f=52,49,84,26,62,76,21,15,49,60,59,92,45,22 while d~=25 do if e>=100 then if e<=100 then f=(f-f%1)e=123 else if e>128 then break else e=145 return f end end else if e<=49 then f=nil e=64 else if e<80 then e=83 f=nil else e=100 f=((b/ci[a])%ci[c])end end end end end else if bi>953 then cv=function(a,b,c,d,d,d)local d do d=((a/2^(b-1))%2^((c-1)-(b-1)+1))end return(d-d%1);end bi=994 else bi=966 ct=(bit_lib and bit_lib.bxor or function(a,b)a=a%(2^32)b=b%(2^bf)local c,d=0,1 while a>0 and b>0 do local e,f=a%16,b%16 c=c+cb[e+1][f+1]*d a=(a-e)/16 b=(b-f)/16 d=d*16 end c=c+a*d+b*d return c end)end end else if bi>=1016 then if bi>1024 then cu=function()local a a=bk(bt,bs,bs)bs=(bs+1);return a;end bi=1080 else cn=function()local a,b,c,d do c,a,b,d=bk(bt,bs,(bs+3))end do bs=(bs+4);end do return((d*16777216)+(b*65536)+(a*256)+c);end end bi=1045 end else bi=1016 bs=1 end end end end end end end)(49,18,42,1,178,15,0,7,130,3,9,6,30,7,8,0,128,'#',33,3,0,12,5,0,1,0,3,10,2,25,4,32,1)
